{"version":3,"file":"static/js/914.fa0146f9.chunk.js","mappings":"4QA0FA,EAhFsC,SAAC,GAShC,IARLA,EAQI,EARJA,OACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,YACAC,EAKI,EALJA,MACAC,EAII,EAJJA,GACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAC,EACI,EADJA,cAEA,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAsCA,OAAKV,GAGH,SAACW,EAAA,EAAD,CAAaC,UAAU,8CAAvB,UACE,gBAAKC,UAAU,iCAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,gBAAKA,UAAU,gBAAf,SACGX,EAAYY,KAAI,SAACC,GAAD,aACf,0BACE,gBACEC,IAAG,UAAEb,EAAMY,UAAR,aAAE,EAAaE,IAClBC,IAAI,GACJC,MAAO,IACPC,OAAQ,IACRC,QAAS,kBAlBF,SAACN,GACtBL,EAAgBK,EACjB,CAgB8BO,CAAeP,EAArB,EACTF,UAAWJ,IAAiBM,EAAO,WAAa,MAPpD,UAAaA,EAAb,wBADe,OAanB,gBAAKF,UAAU,YAAf,UACE,SAACU,EAAA,EAAD,CACEC,KAAMf,EAAe,KAAO,OAC5BY,QA3DQ,WAClB,GAAIZ,EAAc,CAChB,IAAMgB,EAAc,kBAAOvB,IAAP,OAAuBK,IACrCmB,EAAsBD,EAAeE,QACzC,SAACC,GAAD,OAAUnB,IAAiBmB,CAA3B,KAGFC,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,oBAAqB3B,GAAK,CAC1C4B,cAAa,kBACR1B,GADO,cAETD,EAFS,kBAGLC,EAAYD,GAAMsB,QACnB,SAACC,GAAD,OAAWrB,EAAc0B,SAASL,EAAlC,KAJM,CAMRnB,MAGJyB,cAAeR,EAEfS,YAAYC,EAAAA,EAAAA,IAAW,CACrBC,IAAKhC,EACLiC,SAAU,UACVhC,YAAaA,EAAYD,GACzBkC,eAAgBd,EAChBA,eAAgBC,KAGrB,CAEDzB,GACD,aAMmB,IA8BrB,C,sDCrDD,IAzBA,YAAwE,IAAjDuC,EAAgD,EAAhDA,SAAgD,IAAtC5B,UAAAA,OAAsC,MAA1B,uBAA0B,EACrE,GAA4CJ,EAAAA,EAAAA,UAAS,MAArD,eAAOiC,EAAP,KAAuBC,EAAvB,KAmBA,IAjBAC,EAAAA,EAAAA,kBAAgB,WACd,IAAIC,EAAUC,SAASC,eAAelC,GAClCmC,GAAgB,EAQpB,OANKH,IACHG,GAAgB,EAChBH,EAhBN,SAAsChC,GACpC,IAAM6B,EAAiBI,SAASG,cAAc,OAG9C,OAFAP,EAAeQ,aAAa,KAAMrC,GAClCiC,SAASK,KAAKC,YAAYV,GACnBA,CACR,CAWeW,CAA6BxC,IAEzC8B,EAAkBE,GAEX,WACDG,GAAiBH,EAAQS,YAC3BT,EAAQS,WAAWC,YAAYV,EAElC,CACF,GAAE,CAAChC,IAEmB,OAAnB6B,EAEJ,OAAOc,EAAAA,EAAAA,cAAaf,EAAUC,EAC/B,C","sources":["components/CardFromTheDiscardedDeckModal/index.js","components/ReactPortal/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { doc, updateDoc, arrayUnion } from \"firebase/firestore\";\r\n\r\nimport { db } from \"../../firebase\";\r\n\r\nimport ReactPortal from \"../ReactPortal\";\r\nimport MainButton from \"../MainButton\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst CardFromTheDiscardedDeckModal = ({\r\n  isOpen,\r\n  handleClose,\r\n  outCardDeck,\r\n  cards,\r\n  id,\r\n  uuid,\r\n  playerCards,\r\n  selectedCards,\r\n}) => {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  const handleClick = () => {\r\n    if (selectedCard) {\r\n      const newOutCardDeck = [...outCardDeck, ...selectedCards];\r\n      const filteredOutCardDeck = newOutCardDeck.filter(\r\n        (item) => selectedCard !== item\r\n      );\r\n\r\n      updateDoc(doc(db, \"game_rooms_kitten\", id), {\r\n        player_cards: {\r\n          ...playerCards,\r\n          [uuid]: [\r\n            ...playerCards[uuid].filter(\r\n              (item) => !selectedCards.includes(item)\r\n            ),\r\n            selectedCard,\r\n          ],\r\n        },\r\n        out_card_deck: filteredOutCardDeck,\r\n\r\n        game_moves: arrayUnion({\r\n          uid: uuid,\r\n          cardType: \"combo_5\",\r\n          playerCards: playerCards[uuid],\r\n          oldOutCardDeck: newOutCardDeck,\r\n          newOutCardDeck: filteredOutCardDeck,\r\n        }),\r\n      });\r\n    }\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleClickImg = (card) => {\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ReactPortal wrapperId=\"react-portal-card-from-discarded-deck-modal\">\r\n      <div className=\"card-from-discarded-deck-modal\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"content_block\">\r\n            {outCardDeck.map((card) => (\r\n              <div key={`${card}-from-discarded-deck`}>\r\n                <img\r\n                  src={cards[card]?.img}\r\n                  alt=\"\"\r\n                  width={200}\r\n                  height={300}\r\n                  onClick={() => handleClickImg(card)}\r\n                  className={selectedCard === card ? \"selected\" : \"\"}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"btn_block\">\r\n            <MainButton\r\n              text={selectedCard ? \"Go\" : \"Exit\"}\r\n              onClick={handleClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ReactPortal>\r\n  );\r\n};\r\n\r\nexport default CardFromTheDiscardedDeckModal;\r\n","import { useState, useLayoutEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nfunction createWrapperAndAppendToBody(wrapperId) {\r\n  const wrapperElement = document.createElement(\"div\");\r\n  wrapperElement.setAttribute(\"id\", wrapperId);\r\n  document.body.appendChild(wrapperElement);\r\n  return wrapperElement;\r\n}\r\n\r\nfunction ReactPortal({ children, wrapperId = \"react-portal-wrapper\" }) {\r\n  const [wrapperElement, setWrapperElement] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    let element = document.getElementById(wrapperId);\r\n    let systemCreated = false;\r\n\r\n    if (!element) {\r\n      systemCreated = true;\r\n      element = createWrapperAndAppendToBody(wrapperId);\r\n    }\r\n    setWrapperElement(element);\r\n\r\n    return () => {\r\n      if (systemCreated && element.parentNode) {\r\n        element.parentNode.removeChild(element);\r\n      }\r\n    };\r\n  }, [wrapperId]);\r\n\r\n  if (wrapperElement === null) return;\r\n\r\n  return createPortal(children, wrapperElement);\r\n}\r\n\r\nexport default ReactPortal;\r\n"],"names":["isOpen","handleClose","outCardDeck","cards","id","uuid","playerCards","selectedCards","useState","selectedCard","setSelectedCard","ReactPortal","wrapperId","className","map","card","src","img","alt","width","height","onClick","handleClickImg","MainButton","text","newOutCardDeck","filteredOutCardDeck","filter","item","updateDoc","doc","db","player_cards","includes","out_card_deck","game_moves","arrayUnion","uid","cardType","oldOutCardDeck","children","wrapperElement","setWrapperElement","useLayoutEffect","element","document","getElementById","systemCreated","createElement","setAttribute","body","appendChild","createWrapperAndAppendToBody","parentNode","removeChild","createPortal"],"sourceRoot":""}